version: "3.8"

services:
  langfuse:
    image: ghcr.io/langfuse/langfuse:latest
    restart: always
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_SERVER}:5432/${POSTGRES_DB}
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-mysecret}
      SALT: ${SALT:-mysalt}
    ports:
      - "3000:3000"
    depends_on:
      - postgres

  postgres:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./backups:/var/lib/postgres/backups
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:latest
    command: "--host 0.0.0.0 --port '8081' --scheme http"
    ports:
      - 8081:8081
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      DEFAULT_VECTORIZER_MODULE: "text2vec-transformers"
      ENABLE_MODULES: "text2vec-transformers, text2vec-openai"
      CLUSTER_HOSTNAME: "node1"
      AUTHENTICATION_APIKEY_ENABLED: "true"
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: "readonlykey,adminkey"
      AUTHENTICATION_APIKEY_USERS: "jane@doe.com,john@doe.com"
      TRANSFORMERS_INFERENCE_API: "http://t2v-transformers:8080"
    # networks:
    #   - airflow
  t2v-transformers:
    image: semitechnologies/transformers-inference:sentence-transformers-multi-qa-MiniLM-L6-cos-v1
    environment:
      ENABLE_CUDA: 1 # set to 1 to enable
    ports:
      - 8082:8080
    # networks:
    #   - airflow

volumes:
  postgres-db-volume:
